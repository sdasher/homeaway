extends layout
block content
    body
        // optionally define the sidebar content via HTML markup
        #sidebar.leaflet-sidebar.collapsed
            // nav tabs
            .leaflet-sidebar-tabs
                // top aligned tabs
                ul(role='tablist')
                    li
                        a(href='#home' role='tab')
                            i.fa.fa-filter.active
                    li
                        a(href='#autopan' role='tab')
                            i.fa.fa-arrows

            // panel content
            .leaflet-sidebar-content
                #home.leaflet-sidebar-pane
                    h1.leaflet-sidebar-header
                        | Filter
                        span.leaflet-sidebar-close
                            i.fa.fa-caret-left
                    p
                        | Filter counties by the following criteria:
                    .list-group.item-sidebar
                        p
                        form(method='get' action='/filter')
                            label(for='sliderLabel1') Population:
                            input#sliderLabel1(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider1values')
                            #slider1.slider-range
                            p
                            label(for='sliderLabel2') % White:
                            input#sliderLabel2(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider2values')
                            #slider2.slider-range
                            p
                            label(for='sliderLabel3') % Black:
                            input#sliderLabel3(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider3values')
                            #slider3.slider-range
                            p
                            label(for='sliderLabel4') % LatinX:
                            input#sliderLabel4(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider4values')
                            #slider4.slider-range
                            p
                            label(for='sliderLabel5') % Asian:
                            input#sliderLabel5(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider5values')
                            #slider5.slider-range
                            p
                            label(for='sliderLabel6') % Median Age:
                            input#sliderLabel6(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider6values')
                            #slider6.slider-range
                            p
                            label(for='sliderLabel7') % Republican:
                            input#sliderLabel7(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider7values')
                            #slider7.slider-range
                            p
                            label(for='sliderLabel8') % Democrat:
                            input#sliderLabel8(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider8values')
                            #slider8.slider-range
                            p
                            label(for='sliderLabel9') Religious Attendance:
                            input#sliderLabel9(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider9values')
                            #slider9.slider-range
                            p
                            label(for='sliderLabel10') Pop. per Square Mile:
                            input#sliderLabel10(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider10values')
                            #slider10.slider-range
                            p
                            //label(for='sliderLabel10') Pop. per Square Mile:
                            //input#sliderLabel10(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider10values')
                            //#slider10.slider-range
                            //p
                            label(for='sliderLabel11') Median Per Capita Income
                            input#sliderLabel11(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider11values')
                            #slider11.slider-range
                            p
                            label(for='sliderLabel12') Rent as % of Income:
                            input#sliderLabel12(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider12values')
                            #slider12.slider-range
                            p
                            label(for='sliderLabel13') % College Grad:
                            input#sliderLabel13(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider13values')
                            #slider13.slider-range
                            p
                            label(for='sliderLabel14') % Unemployment:
                            input#sliderLabel14(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider14values')
                            #slider14.slider-range
                            p
                            label(for='sliderLabel15') Natural Amenties Score:
                            input#sliderLabel15(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider15values')
                            #slider15.slider-range
                            p
                            label(for='sliderLabel16') Social Capital:
                            input#sliderLabel16(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider16values')
                            #slider16.slider-range
                            p
                            label(for='sliderLabel17') K12 Math Achievement:
                            input#sliderLabel17(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider17values')
                            #slider17.slider-range
                            p
                            label(for='sliderLabel18') K12 Language Arts Achievement:
                            input#sliderLabel18(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text' name='slider18values')
                            #slider18.slider-range
                            p
                            input(type='submit')
                        form.row(action='/', class='form-control-lg row')
                            input(type='submit' value='Reset Sliders' class="btn btn-primary btn-lg")



                #autopan.leaflet-sidebar-pane
                    h1.leaflet-sidebar-header
                        | autopan
                        span.leaflet-sidebar-close
                            i.fa.fa-caret-left
                    p
                        //code Leaflet.control.sidebar({ autopan: true })
                        //|
                #messages.leaflet-sidebar-pane
                    h1.leaflet-sidebar-header
                        | Messages
                        span.leaflet-sidebar-close
                            i.fa.fa-caret-left

        script(src='https://unpkg.com/leaflet/dist/leaflet.js' crossorigin='')
        script(src='/javascripts/leaflet-sidebar.js')

        #map
        block map
        script.
            // create the sidebar instance and add it to the map
            var sidebar = L.control.sidebar({container: 'sidebar'})
                .addTo(map)
                .open('home');
            // add panels dynamically to the sidebar
            sidebar
                .addPanel({
                    id: 'info',
                    tab: '<i class="fa fa-info"></i>',
                    title: 'Variables',
                    pane: '<p>Description of Variables</p>>',
            });

            // be notified when a panel is opened

            sidebar.on('content', function (ev) {
                switch (ev.id) {
                    case 'autopan':
                        sidebar.options.autopan = true;
                        break;
                    default:
                        sidebar.options.autopan = false;
                }
            });
        script(src='/javascripts/slider.js')
