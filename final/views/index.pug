extends layout
block content
    body
        // optionally define the sidebar content via HTML markup
        #sidebar.leaflet-sidebar.collapsed
            // nav tabs
            .leaflet-sidebar-tabs
                // top aligned tabs
                ul(role='tablist')
                    li
                        a(href='#home' role='tab')
                            i.fa.fa-filter.active
                    li
                        a(href='#autopan' role='tab')
                            i.fa.fa-arrows

            // panel content
            .leaflet-sidebar-content
                #home.leaflet-sidebar-pane
                    h1.leaflet-sidebar-header
                        | Filter
                        span.leaflet-sidebar-close
                            i.fa.fa-caret-left
                    p
                        | Filter counties by the following criteria:
                    .list-group.item-sidebar
                        p
                        form(method='get' action='/filter')
                            label(for='amount1') Population:
                            input#amount1(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text')
                            #slider1.slider-range
                            p
                            label(for='amount2') Median Age
                            input#amount2(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text')
                            #slider2.slider-range
                            p
                            label(for='amount3') Rent as % of Income:
                            input#amount3(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text')
                            #slider3.slider-range
                            p
                            label(for='amount4') Social Capital
                            input#amount1(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text')
                            #slider4.slider-range
                            p
                            label(for='amount5') Natural Amenities
                            input#amount5(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text')
                            #slider5.slider-range
                            p
                            label(for='amount6') Natural Amenities
                            input#amount6(readonly='' style='border:0; color:#f6931f; font-weight:bold;' type='text')
                            #slider6.slider-range
                            p
                            input(type='submit')
                        p

                #autopan.leaflet-sidebar-pane
                    h1.leaflet-sidebar-header
                        | autopan
                        span.leaflet-sidebar-close
                            i.fa.fa-caret-left
                    p
                        //code Leaflet.control.sidebar({ autopan: true })
                        //|
                #messages.leaflet-sidebar-pane
                    h1.leaflet-sidebar-header
                        | Messages
                        span.leaflet-sidebar-close
                            i.fa.fa-caret-left
        #map
        script(src='https://unpkg.com/leaflet/dist/leaflet.js' crossorigin='')
        script(src='/javascripts/leaflet-sidebar.js')
        script.
            var myData = !{JSON.stringify(jsonData)};
            console.log("Map runs");
            // Create variable to hold map element, give initial settings to map
            var map = L.map('map', {center: [39.359967212949016, -111.6519904633779], zoom: 4});

            // Add tiles from Mapbox
            var accessToken = 'pk.eyJ1Ijoic2Rhc2hlciIsImEiOiJja2VwMzJidTkwb2Y0MnpwbmNzZzNwMXBtIn0.yISZa2w-PKhRAEaAyIl8ew';
            L.tileLayer(
                'https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/{z}/{x}/{y}?access_token=' + accessToken, {
                    tileSize: 512,
                    zoomOffset: -1,
                    attribution: '© <a href="https://apps.mapbox.com/feedback/">Mapbox</a> © <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                }).addTo(map);

            var layerControl = L.control.layers(null, null, {position: 'topright'}).addTo(map);

            // Add JSON to map
            L.geoJson(myData, {
                onEachFeature: function (feature, layer) {
                    layer.bindPopup(
                        feature.properties.f2 + ", " + feature.properties.f3 +
                        "<br>Population: " + feature.properties.f4+
                        "<br>Median Age: "+feature.properties.f9+
                        "<br>Rent as % of Income: " + feature.properties.f14 +
                        "<br>% White: " + Math.round(feature.properties.f5/feature.properties.f4*1000)/10 +
                        "<br>% Democrat: " +
                        "<br>% College Grad:" +
                        "<br>Natural Amenities: "
                    );
                }
            }).addTo(map);
            // create the sidebar instance and add it to the map
            var sidebar = L.control.sidebar({container: 'sidebar'})
                .addTo(map)
                .open('home');
            // add panels dynamically to the sidebar
            sidebar
                .addPanel({
                    id: 'info',
                    tab: '<i class="fa fa-info"></i>',
                    title: 'Variables',
                    pane: '<p>Description of Variables</p>>',
            })


            // be notified when a panel is opened
            sidebar.on('content', function (ev) {
                switch (ev.id) {
                    case 'autopan':
                        sidebar.options.autopan = true;
                        break;
                    default:
                        sidebar.options.autopan = false;
                }
            });

        script(src='/javascripts/slider.js')






